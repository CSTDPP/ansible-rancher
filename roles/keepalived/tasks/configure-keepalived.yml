---

- name: Create Namespace for IP Failover objects
  k8s:
    kubeconfig: "{{ kubeconfigfile }}"
    state: present
    api_version: v1
    kind: Namespace
    name: ipfailover

- name: Create Role for privileged PSP for IP Failover
  k8s:
    kubeconfig: "{{ kubeconfigfile }}"
    state: present
    definition: "{{ lookup('file', 'psp:privileged.yml') }}"

- name: Create RoleBinding for privileged PSP for IP Failover
  k8s:
    kubeconfig: "{{ kubeconfigfile }}"
    state: present
    definition: "{{ lookup('file', 'default:psp:privileged.yml') }}"

- name: Create ConfigMap with check.py and/or notify.sh for IP Failover
  k8s:
    kubeconfig: "{{ kubeconfigfile }}"
    state: present
    definition: "{{ lookup('file', 'cm-{{ keepalived_setup_env }}-notify.yml') }}"

- name: Create IP Failover DaemonSets for Internal IP
  k8s:
    kubeconfig: "{{ kubeconfigfile }}"
    state: present
    definition: "{{ lookup('template', 'ds_failover.yml.j2') }}"
  with_items:
    - "{{ keepalived_private_failover_ip }}"
  vars:
    nodes: "{{ groups[keepalived_private_node_group_ipv4] }}"
    unicast_peers: "{% for node in nodes %}''{{ hostvars[node]['ansible_' + keepalived_private_failover_track_interface_ip]['ipv4']['address'] }}'',{% endfor %}"
    with_cloud_notify: "{{ 'True' if keepalived_setup_env == 'cloudscale' else 'False' }}"
    node_selector: "{{ keepalived_private_node_selector }}"
    node_toleration: "{{ keepalived_private_node_toleration }}"
    interface: "{{ keepalived_private_failover_track_interface_ip }}"
    track_interface: "{{ keepalived_private_failover_track_interface_ip }}"

- name: Create IP Failover DaemonSets for Public IP
  k8s:
    kubeconfig: "{{ kubeconfigfile }}"
    state: present
    definition: "{{ lookup('template', 'ds_failover.yml.j2') }}"
  with_items:
    - "{{ keepalived_public_failover_track_interface_ip }}"
  vars:
    nodes: "{{ groups[keepalived_public_node_group_ipv4] }}"
    unicast_peers: "{% for node in nodes %}''{{ hostvars[node]['ansible_' + keepalived_public_failover_track_interface_ip]['ipv4']['address'] }}'',{% endfor %}"
    server_ids: "{% for node in nodes %}{''{{ hostvars[node]['inventory_hostname'] }}'':''{{ hostvars[node]['cloudscale_vm']['uuid'] }}''},{% endfor %}"
    with_cloud_notify: "{{ 'True' if keepalived_setup_env == 'cloudscale' else 'False' }}"
    node_selector: "{{ keepalived_public_node_selector }}"
    node_toleration: "{{ keepalived_public_node_toleration }}"
    interface: "{{ keepalived_public_failover_track_interface_ip }}"
    track_interface: "{{ keepalived_public_failover_track_interface_ip }}"
  when:
    - not keepalived_private_only

- name: Create IP Failover DaemonSets for Public IPv6
  k8s:
    kubeconfig: "{{ kubeconfigfile }}"
    state: present
    definition: "{{ lookup('template', 'ds_failover.yml.j2') }}"
  with_items:
    - "{{ keepalived_public_failover_track_interface_ipv6 }}"
  vars:
    nodes: "{{ groups[keepalived_public_node_group_ipv6] }}"
    unicast_peers: "{% for node in nodes %}''{{ hostvars[node]['ansible_default_ipv6']['address'] }}'',{% endfor %}"
    server_ids: "{% for node in nodes %}{''{{ hostvars[node]['inventory_hostname'] }}'':''{{ hostvars[node]['cloudscale_vm']['uuid'] }}''},{% endfor %}"
    with_cloud_notify: "{{ 'True' if keepalived_setup_env == 'cloudscale' else 'False' }}"
    node_selector: "{{ keepalived_public_node_selector }}"
    node_toleration: "{{ keepalived_public_node_toleration }}"
    interface: "{{ keepalived_public_failover_track_interface_ipv6 }}"
    track_interface: "{{ keepalived_public_failover_track_interface_ipv6 }}"
  when:
    - not keepalived_private_only
    - not keepalived_ipv4_only